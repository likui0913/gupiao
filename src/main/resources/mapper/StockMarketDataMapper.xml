<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gupiao.generator.mapper.StockMarketDataMapper">

    <resultMap id="BaseResultMap" type="com.gupiao.generator.domain.StockMarketData">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="stockCode" column="stock_code" jdbcType="VARCHAR"/>
            <result property="tradeDate" column="trade_date" jdbcType="VARCHAR"/>
            <result property="openingPrice" column="opening_price" jdbcType="DECIMAL"/>
            <result property="closingPrice" column="closing_price" jdbcType="DECIMAL"/>
            <result property="highestPrice" column="highest_price" jdbcType="DECIMAL"/>
            <result property="lowestPrice" column="lowest_price" jdbcType="DECIMAL"/>
            <result property="volume" column="volume" jdbcType="DECIMAL"/>
            <result property="turnover" column="turnover" jdbcType="DECIMAL"/>
            <result property="amplitude" column="amplitude" jdbcType="DECIMAL"/>
            <result property="quoteChange" column="quote_change" jdbcType="DECIMAL"/>
            <result property="upsAndDowns" column="ups_and_downs" jdbcType="DECIMAL"/>
            <result property="turnoverRate" column="turnover_rate" jdbcType="DECIMAL"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,stock_code,trade_date,
        opening_price,closing_price,highest_price,
        lowest_price,volume,turnover,
        amplitude,quote_change,ups_and_downs,
        turnover_rate
    </sql>


    <insert id="insert" parameterType="com.gupiao.generator.domain.StockMarketData" useGeneratedKeys="true">
        insert into stock_market_data(stock_code,trade_date,
                                      opening_price,closing_price,highest_price,
                                      lowest_price,volume,turnover,
                                      amplitude,quote_change,ups_and_downs,
                                      turnover_rate)
        values(#{stockCode,jdbcType=VARCHAR},#{tradeDate,jdbcType=VARCHAR},
               #{openingPrice,jdbcType=DECIMAL},#{closingPrice,jdbcType=DECIMAL},#{highestPrice,jdbcType=DECIMAL},
               #{lowestPrice,jdbcType=DECIMAL},#{volume,jdbcType=DECIMAL},#{turnover,jdbcType=DECIMAL},
               #{amplitude,jdbcType=DECIMAL},#{quoteChange,jdbcType=DECIMAL},#{upsAndDowns,jdbcType=DECIMAL},
               #{turnoverRate,jdbcType=DECIMAL})
    </insert>

    <insert id="batchInsert" parameterType="com.gupiao.generator.domain.StockMarketData" useGeneratedKeys="true">
        insert into stock_market_data
        <trim prefix="(" suffix=")" suffixOverrides=",">
          stock_code,trade_date,
          opening_price,closing_price,highest_price,
          lowest_price,volume,turnover,
          amplitude,quote_change,ups_and_downs,
          turnover_rate
        </trim>
        values
        <foreach collection="list" index="index" item="item" separator=",">
            (
            <trim suffixOverrides=",">
                #{item.stockCode,jdbcType=VARCHAR},#{item.tradeDate,jdbcType=VARCHAR},
                #{item.openingPrice,jdbcType=DECIMAL},#{item.closingPrice,jdbcType=DECIMAL},#{item.highestPrice,jdbcType=DECIMAL},
                #{item.lowestPrice,jdbcType=DECIMAL},#{item.volume,jdbcType=DECIMAL},#{item.turnover,jdbcType=DECIMAL},
                #{item.amplitude,jdbcType=DECIMAL},#{item.quoteChange,jdbcType=DECIMAL},#{item.upsAndDowns,jdbcType=DECIMAL},
                #{item.turnoverRate,jdbcType=DECIMAL}
            </trim>
            )
        </foreach>
    </insert>

    <select id="selectByCode" resultMap="BaseResultMap">
        select id,stock_code,trade_date,
               opening_price,closing_price,highest_price,
               lowest_price,volume,turnover,
               amplitude,quote_change,ups_and_downs,
               turnover_rate
        from stock_market_data
        where stock_code = #{code,jdbcType=VARCHAR} and trade_date = #{tradeDate,jdbcType=VARCHAR}
    </select>

    <select id="selectMaxDate" resultMap="BaseResultMap">
        select id,stock_code,trade_date,
               opening_price,closing_price,highest_price,
               lowest_price,volume,turnover,
               amplitude,quote_change,ups_and_downs,
               turnover_rate
        from stock_market_data
        where stock_code = #{code,jdbcType=VARCHAR}
        order by trade_date desc limit 1
    </select>

    <select id="selectByCodeAndTwoDate" resultMap="BaseResultMap">
        select id,stock_code,trade_date,
               opening_price,closing_price,highest_price,
               lowest_price,volume,turnover,
               amplitude,quote_change,ups_and_downs,
               turnover_rate
        from stock_market_data
        where stock_code = #{code,jdbcType=VARCHAR}
          and trade_date &gt;= #{startDate,jdbcType=VARCHAR}
          and trade_date &lt;= #{endDate,jdbcType=VARCHAR}
        order by trade_date asc;
    </select>

    <select id="selectByCodeAndDate" resultMap="BaseResultMap">
        select id,stock_code,trade_date,
               opening_price,closing_price,highest_price,
               lowest_price,volume,turnover,
               amplitude,quote_change,ups_and_downs,
               turnover_rate
        from stock_market_data
        where stock_code = #{code,jdbcType=VARCHAR} and trade_date &lt;= #{endDate,jdbcType=VARCHAR}
        order by trade_date desc limit #{limited,jdbcType=INTEGER};
    </select>

    <select id="selectByStartDateAndDays" resultMap="BaseResultMap">
        select id,stock_code,trade_date,
               opening_price,closing_price,highest_price,
               lowest_price,volume,turnover,
               amplitude,quote_change,ups_and_downs,
               turnover_rate
        from stock_market_data
        where stock_code = #{code,jdbcType=VARCHAR} and trade_date &gt;= #{startDate,jdbcType=VARCHAR}
        order by trade_date asc limit #{limited,jdbcType=INTEGER};
    </select>

    <select id="selectNearByCodeAndDate" resultMap="BaseResultMap">
        select id,stock_code,trade_date,
               opening_price,closing_price,highest_price,
               lowest_price,volume,turnover,
               amplitude,quote_change,ups_and_downs,
               turnover_rate
        from stock_market_data
        where stock_code = #{code,jdbcType=VARCHAR} and trade_date &gt; #{endDate,jdbcType=VARCHAR}
        order by trade_date asc limit 1;
    </select>

</mapper>
