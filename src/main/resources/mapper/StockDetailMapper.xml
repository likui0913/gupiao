<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gupiao.generator.mapper.StockDetailMapper">

    <resultMap id="BaseResultMap" type="com.gupiao.generator.domain.StockDetail">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="stockCode" column="stock_code" jdbcType="VARCHAR"/>
            <result property="stockType" column="stock_type" jdbcType="INTEGER"/>
            <result property="stockName" column="stock_name" jdbcType="VARCHAR"/>
            <result property="marketTime" column="market_time" jdbcType="VARCHAR"/>
            <result property="industry" column="industry" jdbcType="VARCHAR"/>
            <result property="totalCapital" column="total_capital" jdbcType="DECIMAL"/>
            <result property="circulatingCapital" column="circulating_capital" jdbcType="DECIMAL"/>
            <result property="totalCapitalization" column="total_capitalization" jdbcType="DECIMAL"/>
            <result property="circulatingCapitalization" column="circulating_capitalization" jdbcType="DECIMAL"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,stock_code,stock_type,stock_name,market_time,
        industry,total_capital,circulating_capital,
        total_capitalization,circulating_capitalization,is_focus as focus
    </sql>

    <insert id="insert" parameterType="com.gupiao.generator.domain.StockDetail" useGeneratedKeys="true">
        insert into stock_detail(stock_code,stock_type,stock_name,market_time,
                                 industry,total_capital,circulating_capital,
                                 total_capitalization,circulating_capitalization,is_focus)
        values(#{stockCode,jdbcType=VARCHAR},#{stockType,jdbcType=INTEGER},#{stockName,jdbcType=VARCHAR},#{marketTime,jdbcType=VARCHAR},
               #{industry,jdbcType=VARCHAR},#{totalCapital,jdbcType=DECIMAL},#{circulatingCapital,jdbcType=DECIMAL},
               #{totalCapitalization,jdbcType=DECIMAL},#{circulatingCapitalization,jdbcType=DECIMAL},#{isFocus,jdbcType=INTEGER})
    </insert>

    <select id="selectByCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        select id,stock_code,stock_type,stock_name,market_time,
               industry,total_capital,circulating_capital,
               total_capitalization,circulating_capitalization,is_focus as focus
        from stock_detail
        where stock_code = #{code,jdbcType=VARCHAR}
    </select>

    <select id="selectNextByCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        select id,stock_code,stock_type,stock_name,market_time,
               industry,total_capital,circulating_capital,
               total_capitalization,circulating_capitalization,is_focus as focus
        from stock_detail
        where id > (select id from stock_detail where stock_code = #{code,jdbcType=VARCHAR})
        <choose>
            <when test = " focus != null">
                and is_focus = #{focus,jdbcType=INTEGER}
            </when>
            <when test = " industry != null">
                and industry = #{industry,jdbcType=VARCHAR}
            </when>
        </choose>
        order by id asc limit 1;
    </select>

    <select id="selectLastByCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        select id,stock_code,stock_type,stock_name,market_time,
               industry,total_capital,circulating_capital,
               total_capitalization,circulating_capitalization,is_focus as focus
        from stock_detail
        where id &lt; (select id from stock_detail where stock_code = #{code,jdbcType=VARCHAR})
        <choose>
            <when test = " focus != null">
                and is_focus = #{focus,jdbcType=INTEGER}
            </when>
            <when test = " industry != null">
                and industry = #{industry,jdbcType=VARCHAR}
            </when>
        </choose>
        order by id desc limit 1;
    </select>

    <select id="selectByCodeAndPages" resultMap="BaseResultMap">
        select id,stock_code,stock_type,stock_name,market_time,
               industry,total_capital,circulating_capital,
               total_capitalization,circulating_capitalization,is_focus as focus
        from stock_detail
        where stock_type = 0

        <choose>
            <when test = " focus != null">
                and is_focus = #{focus,jdbcType=INTEGER}
            </when>
            <when test = " industry != null">
                and industry = #{industry,jdbcType=VARCHAR}
            </when>
        </choose>

        order by id asc limit #{limitStart,jdbcType=INTEGER},50;
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select id,stock_code,stock_type,stock_name,market_time,
               industry,total_capital,circulating_capital,
               total_capitalization,circulating_capitalization,is_focus as focus
        from stock_detail
    </select>

    <update id="updateById">
        update stock_detail set
            industry = #{industry,jdbcType=VARCHAR},
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateFocusByCode">
        update stock_detail set
            is_focus = #{isFocus,jdbcType=INTEGER}
            where stock_code = #{code,jdbcType=VARCHAR}
    </update>

</mapper>
